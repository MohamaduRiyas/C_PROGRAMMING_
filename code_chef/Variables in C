A variable is like a labeled box where you can store data. Imagine you have a box labeled "age" and you put the number 25 in it. In C, you would do this by writing int age = 25;. This means you're storing the number 25 in the variable named age.

int denotes that we will be storing integers (numbers) in this variable.

Here's the cool part: whenever you use age in your code, C will remember it is 25. For example, if you write printf("%d", age), C will show 25.

Task
Create a variable in editor named age and assign the value 25 to it.
Print the value of age variable using print statement.



#include <stdio.h>

int main() {
    // Replace __ with 25
    int age = __;
    printf("%d", age);
}

SOLUTION : 
#include <stdio.h>

int main() {
    // Replace __ with 25
    int age = 25;
    printf("%d", age);
}



2.
Next
Declaring a variable
When we declare a variable, we should also specify what type of variable it is. This is known as data type, basically meaning what type of data we are going to store in a variable.

Here are all the major data types and what they store in C:

Data Type	Description	Example Declaration
int	Stores whole numbers	int c = 100000;
long	Stores big whole numbers	long d = 100000L;
float	Stores small decimal numbers	float e = 10.5;
double	Stores big decimal numbers	double f = 10.5;
char	Stores single characters	char g = 'A';
Task
Write a program which does the following

Create an integer variable named number
Assign the value 19 to number
Output the value of number.


solution:
#include <stdio.h>

int main() {
    // Declare a variable
    int number = 19;
    
    // Print the variable
    printf("%d", number);
  
}

3.Addition of Variables
Write a program which does the following

Declare two integer variables a and b
Assign the value 23 to a and 20 to b
Output the sum of a and b to the console
To sum a and b, you can print a + b, like we did with numbers previously.

Expected output

43
#include <stdio.h>

int main() {
    // Assign the value 23 to a
    int a = 23;
    
    // Assign the value 20 to b
    int b = 20;
    
    // Output the sum of a and b
    printf("%d", a + b);
}

4.Area of Rectangle
Write a program which does the following

Find out and display the area of a rectangle of sides 45 and 76 respectively.
Declare variables length, width and area and assign the relevant values to them
Make sure to add some text, so that the person reading the output knows what the output means.
Output Format
The Area of the given rectangle is area
Solution Code:


Copy Solution to IDE

#include <stdio.h>

int main() {

  int length = 45;
  int width = 76;
  int area = length * width;
  printf("The Area of the given rectangle is %d", area);
}

5.Double datatype
If we want to store decimal values we use the double data type.

Syntax to declare a double:

double radius = 8.9;
To print a double, we do:

printf("%f", radius);

// Output
// 8.9
Note that to print a double, we are using %f instead of %d. If you use %d to print a double value, the output will be very different.

Task
Write a program which does the following:

Find the area of a circle whose radius is 8.9. Take pi = 3.14
Declare variables radius, pi and area and assign the relevant values to them
Formula for area of a circle is Pi * radius * radius

#include <stdio.h>

int main() {

  double pi = 3.14;
  double radius = 8.9;
  double area = pi * radius * radius;

  printf("The Area of the given Circle is %f", area);
  
}

Review and Reflect - Variables
Hope you got the real taste of writing code in the last few problems.

Till now we have learned in detail about the structure of a C program. We also learned about variables, and different data types like Integers, and Double.

Next up is a small quiz on what we have learned till now.

Then we are going to learn about another data type in the next lesson and solve slightly harder problems to deeply understand how C works.

This knowledge will make you a master in C real soon. Don't get discouraged when you get Wrong answer or Runtime error. Everybody makes mistakes while learning
